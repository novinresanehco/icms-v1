// database/migrations/2024_01_01_000003_create_widget_performance_tables.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('widget_performance', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->float('load_time')->comment('Load time in milliseconds');
            $table->float('memory_usage')->comment('Memory usage in MB');
            $table->integer('database_queries');
            $table->boolean('has_error')->default(false);
            $table->string('error_message')->nullable();
            $table->timestamp('recorded_at');

            $table->index(['widget_id', 'recorded_at']);
            $table->index(['widget_id', 'has_error']);
        });

        Schema::create('widget_cache', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('cache_key');
            $table->boolean('hit');
            $table->integer('ttl')->nullable();
            $table->float('response_time')->comment('Response time in milliseconds');
            $table->timestamp('recorded_at');

            $table->index(['widget_id', 'recorded_at']);
            $table->index(['widget_id', 'hit']);
        });

        Schema::create('widget_errors', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('error_type');
            $table->string('error_message');
            $table->text('stack_trace')->nullable();
            $table->json('context')->nullable();
            $table->string('ip_address')->nullable();
            $table->string('user_agent')->nullable();
            $table->timestamp('occurred_at');

            $table->index(['widget_id', 'occurred_at']);
            $table->index(['widget_id', 'error_type']);
        });

        Schema::create('widget_resource_usage', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->float('cpu_usage')->comment('CPU usage percentage');
            $table->float('memory_usage')->comment('Memory usage in MB');
            $table->integer('database_queries');
            $table->integer('cache_queries');
            $table->float('network_io')->comment('Network I/O in KB');
            $table->timestamp('recorded_at');

            $table->index(['widget_id', 'recorded_at']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('widget_resource_usage');
        Schema::dropIfExists('widget_errors');
        Schema::dropIfExists('widget_cache');
        Schema::dropIfExists('widget_performance');
    }
};

// database/migrations/2024_01_01_000004_create_widget_audit_tables.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('widget_audit_logs', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->foreignId('user_id')->nullable()->constrained()->nullOnDelete();
            $table->string('action');
            $table->json('old_values')->nullable();
            $table->json('new_values')->nullable();
            $table->ipAddress('ip_address')->nullable();
            $table->string('user_agent')->nullable();
            $table->timestamp('performed_at');

            $table->index(['widget_id', 'performed_at']);
            $table->index(['widget_id', 'action']);
        });

        Schema::create('widget_state_history', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('type');
            $table->json('state_data');
            $table->string('reason')->nullable();
            $table->foreignId('created_by')->nullable()->constrained('users')->nullOnDelete();
            $table->timestamps();

            $table->index(['widget_id', 'created_at']);
            $table->index(['widget_id', 'type']);
        });

        Schema::create('widget_restore_points', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('label');
            $table->text('description')->nullable();
            $table->json('state_data');
            $table->foreignId('created_by')->nullable()->constrained('users')->nullOnDelete();
            $table->timestamp('expires_at')->nullable();
            $table->timestamps();
            $table->softDeletes();

            $table->index(['widget_id', 'created_at']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('widget_restore_points');
        Schema::dropIfExists('widget_state_history');
        Schema::dropIfExists('widget_audit_logs');
    }
};

// database/migrations/2024_01_01_000005_create_widget_analytics_tables.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('widget_metrics', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('metric_key');
            $table->string('metric_value');
            $table->timestamp('recorded_at');

            $table->index(['widget_id', 'recorded_at']);
            $table->index(['widget_id', 'metric_key']);
        });

        Schema::create('widget_analytics', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('event_type');
            $table->json('event_data');
            $table->timestamp('occurred_at');

            $table->index(['widget_id', 'occurred_at']);
            $table->index(['widget_id', 'event_type']);
        });

        Schema::create('widget_reports', function (Blueprint $table) {
            $table->id();
            $table->foreignId('widget_id')->constrained()->cascadeOnDelete();
            $table->string('report_type');
            $table->json('report_data');
            $table->dateTime('period_start');
            $table->dateTime('period_end');
            $table->foreignId('generated_by')->nullable()->constrained('users')->nullOnDelete();
            $table->timestamps();

            $table->index(['widget_id', 'created_at']);
            $table->index(['widget_id', 'report_type']);
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('widget_reports');
        Schema::dropIfExists('widget_analytics');
        Schema::dropIfExists('widget_metrics');
    }
};